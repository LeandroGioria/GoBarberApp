yarn add express
Yarn add nodemon -D
Yarn add eslint
Yarn eslint —init
	edit eslintrc.js
		 extends: [
    			'airbnb-base',
   		 	'prettier',
  		],
  		plugins: ['prettier'],

		rules: {
    			"prettier/prettier": "error",
    			"class-methods-use-this": "off",
   			 "no-param-reassign": "off",
   			 "camelcase": "off",
    			 "no-unused-vars": ["error", { "argsIgnorePattern": "next" }]
  		},

yarn add prettier eslint-config-prettier eslint-plugin-prettier -D
	create file -> .prettierrc
		{
    			"singleQuote": true,
   			 "trailingComma": "es5"
		}


yarn eslint --fix src --ext .js 

Install editorconfig extension
	right click > generate editorconfig file
	set two attributes to true
		trim_trailing_whitespace = true
		insert_final_newline = true

yarn add sucrase
create nodemon.json file in the root
	{
	  "execMap":{
		"js": "node -r sucrase/register"
	  }
	}
	
-------------------------------------------------
banco de dados + sequelize
-------------------------------------------------
yarn add sequelize
yarn add sequelize-cli -D

if your DB is postgres:
	yarn add pg pg-hstore

create folder -> database/migrations
create config/database.js
	module.exports = {
	  dialect: 'postgres',
	  host: 'localhost',
	  username: 'postgres',
	  password: 'docker',
	  database: 'gobarber',
	  define: {
		  timestamps: true,
		  underscored: true,
		  underscoredAll: true,
	  },
	};

create .sequelizerc
	const { resolve } = require('path');

	module.exports = {
		config: resolve(__dirname, 'src', 'config', 'database.js'),
		'models-path': resolve(__dirname, 'src', 'app', 'models'),
		'migrations-path': resolve(__dirname, 'src', 'database', 'migrations'),
		'seeders-path': resolve(__dirname, 'src', 'database', 'seeds'),
	}
	
	